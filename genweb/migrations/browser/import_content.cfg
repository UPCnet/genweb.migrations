[transmogrifier]
# Each pipeline corresponds to a blueprint section below
pipeline =
 jsonsource
# printer
 removeid
 moveobjects
 constructor
 copyuid
 deserializer
 schemaupdater
 workflowupdater
 datesupdate
 lefovers
 properties
 reindexobject
 logger

[jsonsource]
# content_projectes_2018-06-12-12-29-57 content_documents_2018-06-12-11-07-41
blueprint = collective.jsonmigrator.jsonsource
path = /Dades/plone/ulearn5.oct18/var/content

[printer]
blueprint = genweb.migrations.sections.pprinter

[removeid]
# The jsonify will have the id we want to use in the `_id` field
# so remove the one from the data we don't want to use
blueprint = collective.transmogrifier.sections.manipulator
delete = id

[moveobjects]
blueprint = collective.transmogrifier.sections.inserter
key = string:_path
value = python:item['_path'].replace('/20/aspb/', '/Plone/')

[constructor]
# Here's where the actual magic happens, create the content object in the site
blueprint = collective.transmogrifier.sections.constructor

[copyuid]
# Needed so that the schemaupdater can set the UUID correctly
blueprint = collective.transmogrifier.sections.manipulator
keys = _uid
destination = string:plone.uuid

[deserializer]
# If the data was contained inside of an attached JSON file, stuff that data
# back into the pipline for the next step.
blueprint = transmogrify.dexterity.deserializer

[schemaupdater]
# Now updated the created item from the data in the dictionary that has been
# passed down the pipeline
blueprint = transmogrify.dexterity.schemaupdater

[workflowupdater]
blueprint = genweb.migrations.sections.workflowupdater

[datesupdate]
# Plone itself includes some nice blueprint sections that are ready to use
# Set creation, modification and effective dates on the object
blueprint = plone.app.transmogrifier.datesupdater

[lefovers]
blueprint = genweb.migrations.leftovers

[properties]
# Copy each item's zope properties into the the property sheet of the object
blueprint = collective.jsonmigrator.properties

[reindexobject]
blueprint = plone.app.transmogrifier.reindexobject

[logger]
# Critical to developing your piplines is the ability to see log output of what has happened
# Use the logger blueprint section to pick and choose what to output into your logs
blueprint = collective.transmogrifier.sections.logger
keys =
    _type
    _path
